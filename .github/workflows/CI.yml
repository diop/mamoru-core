name: CI
on: push
env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.MAMORU_ACCESS_TOKEN }}

      - uses: ./.github/actions/install-deps
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run linting
        run: |
          cargo fmt -- --check
          cargo clippy --workspace --all-features --tests

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.MAMORU_ACCESS_TOKEN }}

      - uses: ./.github/actions/install-deps
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: cargo build --verbose

  build-mamoru-sdk-as:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install NPM
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: Build
        run: |
          npm ci
          npm run asbuild:debug
        working-directory: ./mamoru-sdk-as

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.MAMORU_ACCESS_TOKEN }}

      - uses: ./.github/actions/install-deps
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: make test

  prepare-validation-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.MAMORU_ACCESS_TOKEN }}

      - id: submodule-version
        run: |
          SUBMODULE_COMMIT=$(git submodule status | cut -d " " -f2)
          echo "commit=${SUBMODULE_COMMIT}" >> $GITHUB_OUTPUT
      - id: ecr-login
        uses: ./.github/actions/ecr-login
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
    outputs:
      registry: ${{ steps.ecr-login.outputs.registry }}
      docker_username: ${{ steps.ecr-login.outputs.docker_username }}
      docker_password: ${{ steps.ecr-login.outputs.docker_password }}
      submodule_commit: ${{ steps.submodule-version.outputs.commit }}

  validation-chain-tests:
    needs:
      - prepare-validation-tests
    runs-on: ubuntu-latest
    services:
      validation-chain:
        image: ${{ needs.prepare-validation-tests.outputs.registry }}/mamoru-foundation/validation-chain-dev:${{ needs.prepare-validation-tests.outputs.submodule_commit }}
        credentials:
          username: ${{ needs.prepare-validation-tests.outputs.docker_username }}
          password: ${{ needs.prepare-validation-tests.outputs.docker_password }}
        ports:
          - 4500:4500
          - 9090:9090
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.MAMORU_ACCESS_TOKEN }}
      - uses: ./.github/actions/install-deps
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      # IGNORE IT FOR NOW. 
      # - name: Run tests
      #   run: |
      #     make validation-chain-test

  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.MAMORU_ACCESS_TOKEN }}

      - uses: ./.github/actions/install-deps
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov --quiet
      - name: Generate code coverage
        run: cargo llvm-cov
